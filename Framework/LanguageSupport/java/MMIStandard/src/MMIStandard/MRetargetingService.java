/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package MMIStandard;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-10-02")
public class MRetargetingService {

  public interface Iface extends MMIServiceBase.Iface {

    public boolean SetupRetargeting(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id) throws org.apache.thrift.TException;

    public MMIStandard.MAvatarPostureValues RetargetToIntermediate(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id) throws org.apache.thrift.TException;

    public MMIStandard.MAvatarPostureValues RetargetToSpecific(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends MMIServiceBase .AsyncIface {

    public void SetupRetargeting(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException;

    public void RetargetToIntermediate(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException;

    public void RetargetToSpecific(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends MMIServiceBase.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public boolean SetupRetargeting(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id) throws org.apache.thrift.TException
    {
      send_SetupRetargeting(intermediate, specific, id);
      return recv_SetupRetargeting();
    }

    public void send_SetupRetargeting(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id) throws org.apache.thrift.TException
    {
      SetupRetargeting_args args = new SetupRetargeting_args();
      args.setIntermediate(intermediate);
      args.setSpecific(specific);
      args.setId(id);
      sendBase("SetupRetargeting", args);
    }

    public boolean recv_SetupRetargeting() throws org.apache.thrift.TException
    {
      SetupRetargeting_result result = new SetupRetargeting_result();
      receiveBase(result, "SetupRetargeting");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "SetupRetargeting failed: unknown result");
    }

    public MMIStandard.MAvatarPostureValues RetargetToIntermediate(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id) throws org.apache.thrift.TException
    {
      send_RetargetToIntermediate(specificPostureValues, id);
      return recv_RetargetToIntermediate();
    }

    public void send_RetargetToIntermediate(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id) throws org.apache.thrift.TException
    {
      RetargetToIntermediate_args args = new RetargetToIntermediate_args();
      args.setSpecificPostureValues(specificPostureValues);
      args.setId(id);
      sendBase("RetargetToIntermediate", args);
    }

    public MMIStandard.MAvatarPostureValues recv_RetargetToIntermediate() throws org.apache.thrift.TException
    {
      RetargetToIntermediate_result result = new RetargetToIntermediate_result();
      receiveBase(result, "RetargetToIntermediate");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "RetargetToIntermediate failed: unknown result");
    }

    public MMIStandard.MAvatarPostureValues RetargetToSpecific(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id) throws org.apache.thrift.TException
    {
      send_RetargetToSpecific(intermediatePostureValues, id);
      return recv_RetargetToSpecific();
    }

    public void send_RetargetToSpecific(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id) throws org.apache.thrift.TException
    {
      RetargetToSpecific_args args = new RetargetToSpecific_args();
      args.setIntermediatePostureValues(intermediatePostureValues);
      args.setId(id);
      sendBase("RetargetToSpecific", args);
    }

    public MMIStandard.MAvatarPostureValues recv_RetargetToSpecific() throws org.apache.thrift.TException
    {
      RetargetToSpecific_result result = new RetargetToSpecific_result();
      receiveBase(result, "RetargetToSpecific");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "RetargetToSpecific failed: unknown result");
    }

  }
  public static class AsyncClient extends MMIServiceBase.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void SetupRetargeting(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetupRetargeting_call method_call = new SetupRetargeting_call(intermediate, specific, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetupRetargeting_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Boolean> {
      private MMIStandard.MAvatarPosture intermediate;
      private MMIStandard.MAvatarPosture specific;
      private java.lang.String id;
      public SetupRetargeting_call(MMIStandard.MAvatarPosture intermediate, MMIStandard.MAvatarPosture specific, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.intermediate = intermediate;
        this.specific = specific;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetupRetargeting", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetupRetargeting_args args = new SetupRetargeting_args();
        args.setIntermediate(intermediate);
        args.setSpecific(specific);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.Boolean getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_SetupRetargeting();
      }
    }

    public void RetargetToIntermediate(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      RetargetToIntermediate_call method_call = new RetargetToIntermediate_call(specificPostureValues, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class RetargetToIntermediate_call extends org.apache.thrift.async.TAsyncMethodCall<MMIStandard.MAvatarPostureValues> {
      private MMIStandard.MAvatarPostureValues specificPostureValues;
      private java.lang.String id;
      public RetargetToIntermediate_call(MMIStandard.MAvatarPostureValues specificPostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.specificPostureValues = specificPostureValues;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("RetargetToIntermediate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        RetargetToIntermediate_args args = new RetargetToIntermediate_args();
        args.setSpecificPostureValues(specificPostureValues);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public MMIStandard.MAvatarPostureValues getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_RetargetToIntermediate();
      }
    }

    public void RetargetToSpecific(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      RetargetToSpecific_call method_call = new RetargetToSpecific_call(intermediatePostureValues, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class RetargetToSpecific_call extends org.apache.thrift.async.TAsyncMethodCall<MMIStandard.MAvatarPostureValues> {
      private MMIStandard.MAvatarPostureValues intermediatePostureValues;
      private java.lang.String id;
      public RetargetToSpecific_call(MMIStandard.MAvatarPostureValues intermediatePostureValues, java.lang.String id, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.intermediatePostureValues = intermediatePostureValues;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("RetargetToSpecific", org.apache.thrift.protocol.TMessageType.CALL, 0));
        RetargetToSpecific_args args = new RetargetToSpecific_args();
        args.setIntermediatePostureValues(intermediatePostureValues);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public MMIStandard.MAvatarPostureValues getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_RetargetToSpecific();
      }
    }

  }

  public static class Processor<I extends Iface> extends MMIServiceBase.Processor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("SetupRetargeting", new SetupRetargeting());
      processMap.put("RetargetToIntermediate", new RetargetToIntermediate());
      processMap.put("RetargetToSpecific", new RetargetToSpecific());
      return processMap;
    }

    public static class SetupRetargeting<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetupRetargeting_args> {
      public SetupRetargeting() {
        super("SetupRetargeting");
      }

      public SetupRetargeting_args getEmptyArgsInstance() {
        return new SetupRetargeting_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetupRetargeting_result getResult(I iface, SetupRetargeting_args args) throws org.apache.thrift.TException {
        SetupRetargeting_result result = new SetupRetargeting_result();
        result.success = iface.SetupRetargeting(args.intermediate, args.specific, args.id);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class RetargetToIntermediate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, RetargetToIntermediate_args> {
      public RetargetToIntermediate() {
        super("RetargetToIntermediate");
      }

      public RetargetToIntermediate_args getEmptyArgsInstance() {
        return new RetargetToIntermediate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public RetargetToIntermediate_result getResult(I iface, RetargetToIntermediate_args args) throws org.apache.thrift.TException {
        RetargetToIntermediate_result result = new RetargetToIntermediate_result();
        result.success = iface.RetargetToIntermediate(args.specificPostureValues, args.id);
        return result;
      }
    }

    public static class RetargetToSpecific<I extends Iface> extends org.apache.thrift.ProcessFunction<I, RetargetToSpecific_args> {
      public RetargetToSpecific() {
        super("RetargetToSpecific");
      }

      public RetargetToSpecific_args getEmptyArgsInstance() {
        return new RetargetToSpecific_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public RetargetToSpecific_result getResult(I iface, RetargetToSpecific_args args) throws org.apache.thrift.TException {
        RetargetToSpecific_result result = new RetargetToSpecific_result();
        result.success = iface.RetargetToSpecific(args.intermediatePostureValues, args.id);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends MMIServiceBase.AsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("SetupRetargeting", new SetupRetargeting());
      processMap.put("RetargetToIntermediate", new RetargetToIntermediate());
      processMap.put("RetargetToSpecific", new RetargetToSpecific());
      return processMap;
    }

    public static class SetupRetargeting<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetupRetargeting_args, java.lang.Boolean> {
      public SetupRetargeting() {
        super("SetupRetargeting");
      }

      public SetupRetargeting_args getEmptyArgsInstance() {
        return new SetupRetargeting_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean>() { 
          public void onComplete(java.lang.Boolean o) {
            SetupRetargeting_result result = new SetupRetargeting_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetupRetargeting_result result = new SetupRetargeting_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetupRetargeting_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Boolean> resultHandler) throws org.apache.thrift.TException {
        iface.SetupRetargeting(args.intermediate, args.specific, args.id,resultHandler);
      }
    }

    public static class RetargetToIntermediate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, RetargetToIntermediate_args, MMIStandard.MAvatarPostureValues> {
      public RetargetToIntermediate() {
        super("RetargetToIntermediate");
      }

      public RetargetToIntermediate_args getEmptyArgsInstance() {
        return new RetargetToIntermediate_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues>() { 
          public void onComplete(MMIStandard.MAvatarPostureValues o) {
            RetargetToIntermediate_result result = new RetargetToIntermediate_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            RetargetToIntermediate_result result = new RetargetToIntermediate_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, RetargetToIntermediate_args args, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
        iface.RetargetToIntermediate(args.specificPostureValues, args.id,resultHandler);
      }
    }

    public static class RetargetToSpecific<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, RetargetToSpecific_args, MMIStandard.MAvatarPostureValues> {
      public RetargetToSpecific() {
        super("RetargetToSpecific");
      }

      public RetargetToSpecific_args getEmptyArgsInstance() {
        return new RetargetToSpecific_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues>() { 
          public void onComplete(MMIStandard.MAvatarPostureValues o) {
            RetargetToSpecific_result result = new RetargetToSpecific_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            RetargetToSpecific_result result = new RetargetToSpecific_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, RetargetToSpecific_args args, org.apache.thrift.async.AsyncMethodCallback<MMIStandard.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
        iface.RetargetToSpecific(args.intermediatePostureValues, args.id,resultHandler);
      }
    }

  }

  public static class SetupRetargeting_args implements org.apache.thrift.TBase<SetupRetargeting_args, SetupRetargeting_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetupRetargeting_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetupRetargeting_args");

    private static final org.apache.thrift.protocol.TField INTERMEDIATE_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField SPECIFIC_FIELD_DESC = new org.apache.thrift.protocol.TField("specific", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetupRetargeting_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetupRetargeting_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPosture intermediate; // required
    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPosture specific; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      INTERMEDIATE((short)1, "intermediate"),
      SPECIFIC((short)2, "specific"),
      ID((short)3, "id");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // INTERMEDIATE
            return INTERMEDIATE;
          case 2: // SPECIFIC
            return SPECIFIC;
          case 3: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.INTERMEDIATE, new org.apache.thrift.meta_data.FieldMetaData("intermediate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPosture.class)));
      tmpMap.put(_Fields.SPECIFIC, new org.apache.thrift.meta_data.FieldMetaData("specific", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPosture.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetupRetargeting_args.class, metaDataMap);
    }

    public SetupRetargeting_args() {
    }

    public SetupRetargeting_args(
      MMIStandard.MAvatarPosture intermediate,
      MMIStandard.MAvatarPosture specific,
      java.lang.String id)
    {
      this();
      this.intermediate = intermediate;
      this.specific = specific;
      this.id = id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetupRetargeting_args(SetupRetargeting_args other) {
      if (other.isSetIntermediate()) {
        this.intermediate = new MMIStandard.MAvatarPosture(other.intermediate);
      }
      if (other.isSetSpecific()) {
        this.specific = new MMIStandard.MAvatarPosture(other.specific);
      }
      if (other.isSetId()) {
        this.id = other.id;
      }
    }

    public SetupRetargeting_args deepCopy() {
      return new SetupRetargeting_args(this);
    }

    @Override
    public void clear() {
      this.intermediate = null;
      this.specific = null;
      this.id = null;
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPosture getIntermediate() {
      return this.intermediate;
    }

    public SetupRetargeting_args setIntermediate(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPosture intermediate) {
      this.intermediate = intermediate;
      return this;
    }

    public void unsetIntermediate() {
      this.intermediate = null;
    }

    /** Returns true if field intermediate is set (has been assigned a value) and false otherwise */
    public boolean isSetIntermediate() {
      return this.intermediate != null;
    }

    public void setIntermediateIsSet(boolean value) {
      if (!value) {
        this.intermediate = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPosture getSpecific() {
      return this.specific;
    }

    public SetupRetargeting_args setSpecific(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPosture specific) {
      this.specific = specific;
      return this;
    }

    public void unsetSpecific() {
      this.specific = null;
    }

    /** Returns true if field specific is set (has been assigned a value) and false otherwise */
    public boolean isSetSpecific() {
      return this.specific != null;
    }

    public void setSpecificIsSet(boolean value) {
      if (!value) {
        this.specific = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getId() {
      return this.id;
    }

    public SetupRetargeting_args setId(@org.apache.thrift.annotation.Nullable java.lang.String id) {
      this.id = id;
      return this;
    }

    public void unsetId() {
      this.id = null;
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return this.id != null;
    }

    public void setIdIsSet(boolean value) {
      if (!value) {
        this.id = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case INTERMEDIATE:
        if (value == null) {
          unsetIntermediate();
        } else {
          setIntermediate((MMIStandard.MAvatarPosture)value);
        }
        break;

      case SPECIFIC:
        if (value == null) {
          unsetSpecific();
        } else {
          setSpecific((MMIStandard.MAvatarPosture)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case INTERMEDIATE:
        return getIntermediate();

      case SPECIFIC:
        return getSpecific();

      case ID:
        return getId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case INTERMEDIATE:
        return isSetIntermediate();
      case SPECIFIC:
        return isSetSpecific();
      case ID:
        return isSetId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetupRetargeting_args)
        return this.equals((SetupRetargeting_args)that);
      return false;
    }

    public boolean equals(SetupRetargeting_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_intermediate = true && this.isSetIntermediate();
      boolean that_present_intermediate = true && that.isSetIntermediate();
      if (this_present_intermediate || that_present_intermediate) {
        if (!(this_present_intermediate && that_present_intermediate))
          return false;
        if (!this.intermediate.equals(that.intermediate))
          return false;
      }

      boolean this_present_specific = true && this.isSetSpecific();
      boolean that_present_specific = true && that.isSetSpecific();
      if (this_present_specific || that_present_specific) {
        if (!(this_present_specific && that_present_specific))
          return false;
        if (!this.specific.equals(that.specific))
          return false;
      }

      boolean this_present_id = true && this.isSetId();
      boolean that_present_id = true && that.isSetId();
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (!this.id.equals(that.id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIntermediate()) ? 131071 : 524287);
      if (isSetIntermediate())
        hashCode = hashCode * 8191 + intermediate.hashCode();

      hashCode = hashCode * 8191 + ((isSetSpecific()) ? 131071 : 524287);
      if (isSetSpecific())
        hashCode = hashCode * 8191 + specific.hashCode();

      hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
      if (isSetId())
        hashCode = hashCode * 8191 + id.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetupRetargeting_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIntermediate()).compareTo(other.isSetIntermediate());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIntermediate()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate, other.intermediate);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetSpecific()).compareTo(other.isSetSpecific());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSpecific()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specific, other.specific);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetupRetargeting_args(");
      boolean first = true;

      sb.append("intermediate:");
      if (this.intermediate == null) {
        sb.append("null");
      } else {
        sb.append(this.intermediate);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("specific:");
      if (this.specific == null) {
        sb.append("null");
      } else {
        sb.append(this.specific);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (intermediate != null) {
        intermediate.validate();
      }
      if (specific != null) {
        specific.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetupRetargeting_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetupRetargeting_argsStandardScheme getScheme() {
        return new SetupRetargeting_argsStandardScheme();
      }
    }

    private static class SetupRetargeting_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetupRetargeting_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetupRetargeting_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // INTERMEDIATE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.intermediate = new MMIStandard.MAvatarPosture();
                struct.intermediate.read(iprot);
                struct.setIntermediateIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SPECIFIC
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.specific = new MMIStandard.MAvatarPosture();
                struct.specific.read(iprot);
                struct.setSpecificIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.id = iprot.readString();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetupRetargeting_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.intermediate != null) {
          oprot.writeFieldBegin(INTERMEDIATE_FIELD_DESC);
          struct.intermediate.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.specific != null) {
          oprot.writeFieldBegin(SPECIFIC_FIELD_DESC);
          struct.specific.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.id != null) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetupRetargeting_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetupRetargeting_argsTupleScheme getScheme() {
        return new SetupRetargeting_argsTupleScheme();
      }
    }

    private static class SetupRetargeting_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetupRetargeting_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetupRetargeting_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIntermediate()) {
          optionals.set(0);
        }
        if (struct.isSetSpecific()) {
          optionals.set(1);
        }
        if (struct.isSetId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetIntermediate()) {
          struct.intermediate.write(oprot);
        }
        if (struct.isSetSpecific()) {
          struct.specific.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeString(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetupRetargeting_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.intermediate = new MMIStandard.MAvatarPosture();
          struct.intermediate.read(iprot);
          struct.setIntermediateIsSet(true);
        }
        if (incoming.get(1)) {
          struct.specific = new MMIStandard.MAvatarPosture();
          struct.specific.read(iprot);
          struct.setSpecificIsSet(true);
        }
        if (incoming.get(2)) {
          struct.id = iprot.readString();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetupRetargeting_result implements org.apache.thrift.TBase<SetupRetargeting_result, SetupRetargeting_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetupRetargeting_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetupRetargeting_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetupRetargeting_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetupRetargeting_resultTupleSchemeFactory();

    public boolean success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetupRetargeting_result.class, metaDataMap);
    }

    public SetupRetargeting_result() {
    }

    public SetupRetargeting_result(
      boolean success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetupRetargeting_result(SetupRetargeting_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public SetupRetargeting_result deepCopy() {
      return new SetupRetargeting_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = false;
    }

    public boolean isSuccess() {
      return this.success;
    }

    public SetupRetargeting_result setSuccess(boolean success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.Boolean)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return isSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetupRetargeting_result)
        return this.equals((SetupRetargeting_result)that);
      return false;
    }

    public boolean equals(SetupRetargeting_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

      return hashCode;
    }

    @Override
    public int compareTo(SetupRetargeting_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetupRetargeting_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetupRetargeting_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetupRetargeting_resultStandardScheme getScheme() {
        return new SetupRetargeting_resultStandardScheme();
      }
    }

    private static class SetupRetargeting_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetupRetargeting_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetupRetargeting_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.success = iprot.readBool();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetupRetargeting_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeBool(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetupRetargeting_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetupRetargeting_resultTupleScheme getScheme() {
        return new SetupRetargeting_resultTupleScheme();
      }
    }

    private static class SetupRetargeting_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetupRetargeting_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetupRetargeting_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeBool(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetupRetargeting_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readBool();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RetargetToIntermediate_args implements org.apache.thrift.TBase<RetargetToIntermediate_args, RetargetToIntermediate_args._Fields>, java.io.Serializable, Cloneable, Comparable<RetargetToIntermediate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RetargetToIntermediate_args");

    private static final org.apache.thrift.protocol.TField SPECIFIC_POSTURE_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("specificPostureValues", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RetargetToIntermediate_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RetargetToIntermediate_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues specificPostureValues; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SPECIFIC_POSTURE_VALUES((short)1, "specificPostureValues"),
      ID((short)2, "id");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SPECIFIC_POSTURE_VALUES
            return SPECIFIC_POSTURE_VALUES;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SPECIFIC_POSTURE_VALUES, new org.apache.thrift.meta_data.FieldMetaData("specificPostureValues", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPostureValues.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RetargetToIntermediate_args.class, metaDataMap);
    }

    public RetargetToIntermediate_args() {
    }

    public RetargetToIntermediate_args(
      MMIStandard.MAvatarPostureValues specificPostureValues,
      java.lang.String id)
    {
      this();
      this.specificPostureValues = specificPostureValues;
      this.id = id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RetargetToIntermediate_args(RetargetToIntermediate_args other) {
      if (other.isSetSpecificPostureValues()) {
        this.specificPostureValues = new MMIStandard.MAvatarPostureValues(other.specificPostureValues);
      }
      if (other.isSetId()) {
        this.id = other.id;
      }
    }

    public RetargetToIntermediate_args deepCopy() {
      return new RetargetToIntermediate_args(this);
    }

    @Override
    public void clear() {
      this.specificPostureValues = null;
      this.id = null;
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPostureValues getSpecificPostureValues() {
      return this.specificPostureValues;
    }

    public RetargetToIntermediate_args setSpecificPostureValues(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues specificPostureValues) {
      this.specificPostureValues = specificPostureValues;
      return this;
    }

    public void unsetSpecificPostureValues() {
      this.specificPostureValues = null;
    }

    /** Returns true if field specificPostureValues is set (has been assigned a value) and false otherwise */
    public boolean isSetSpecificPostureValues() {
      return this.specificPostureValues != null;
    }

    public void setSpecificPostureValuesIsSet(boolean value) {
      if (!value) {
        this.specificPostureValues = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getId() {
      return this.id;
    }

    public RetargetToIntermediate_args setId(@org.apache.thrift.annotation.Nullable java.lang.String id) {
      this.id = id;
      return this;
    }

    public void unsetId() {
      this.id = null;
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return this.id != null;
    }

    public void setIdIsSet(boolean value) {
      if (!value) {
        this.id = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SPECIFIC_POSTURE_VALUES:
        if (value == null) {
          unsetSpecificPostureValues();
        } else {
          setSpecificPostureValues((MMIStandard.MAvatarPostureValues)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SPECIFIC_POSTURE_VALUES:
        return getSpecificPostureValues();

      case ID:
        return getId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SPECIFIC_POSTURE_VALUES:
        return isSetSpecificPostureValues();
      case ID:
        return isSetId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RetargetToIntermediate_args)
        return this.equals((RetargetToIntermediate_args)that);
      return false;
    }

    public boolean equals(RetargetToIntermediate_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_specificPostureValues = true && this.isSetSpecificPostureValues();
      boolean that_present_specificPostureValues = true && that.isSetSpecificPostureValues();
      if (this_present_specificPostureValues || that_present_specificPostureValues) {
        if (!(this_present_specificPostureValues && that_present_specificPostureValues))
          return false;
        if (!this.specificPostureValues.equals(that.specificPostureValues))
          return false;
      }

      boolean this_present_id = true && this.isSetId();
      boolean that_present_id = true && that.isSetId();
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (!this.id.equals(that.id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSpecificPostureValues()) ? 131071 : 524287);
      if (isSetSpecificPostureValues())
        hashCode = hashCode * 8191 + specificPostureValues.hashCode();

      hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
      if (isSetId())
        hashCode = hashCode * 8191 + id.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RetargetToIntermediate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSpecificPostureValues()).compareTo(other.isSetSpecificPostureValues());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSpecificPostureValues()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specificPostureValues, other.specificPostureValues);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RetargetToIntermediate_args(");
      boolean first = true;

      sb.append("specificPostureValues:");
      if (this.specificPostureValues == null) {
        sb.append("null");
      } else {
        sb.append(this.specificPostureValues);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (specificPostureValues != null) {
        specificPostureValues.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RetargetToIntermediate_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToIntermediate_argsStandardScheme getScheme() {
        return new RetargetToIntermediate_argsStandardScheme();
      }
    }

    private static class RetargetToIntermediate_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<RetargetToIntermediate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RetargetToIntermediate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SPECIFIC_POSTURE_VALUES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.specificPostureValues = new MMIStandard.MAvatarPostureValues();
                struct.specificPostureValues.read(iprot);
                struct.setSpecificPostureValuesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.id = iprot.readString();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RetargetToIntermediate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.specificPostureValues != null) {
          oprot.writeFieldBegin(SPECIFIC_POSTURE_VALUES_FIELD_DESC);
          struct.specificPostureValues.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.id != null) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RetargetToIntermediate_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToIntermediate_argsTupleScheme getScheme() {
        return new RetargetToIntermediate_argsTupleScheme();
      }
    }

    private static class RetargetToIntermediate_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<RetargetToIntermediate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RetargetToIntermediate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSpecificPostureValues()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSpecificPostureValues()) {
          struct.specificPostureValues.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeString(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RetargetToIntermediate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.specificPostureValues = new MMIStandard.MAvatarPostureValues();
          struct.specificPostureValues.read(iprot);
          struct.setSpecificPostureValuesIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readString();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RetargetToIntermediate_result implements org.apache.thrift.TBase<RetargetToIntermediate_result, RetargetToIntermediate_result._Fields>, java.io.Serializable, Cloneable, Comparable<RetargetToIntermediate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RetargetToIntermediate_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RetargetToIntermediate_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RetargetToIntermediate_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RetargetToIntermediate_result.class, metaDataMap);
    }

    public RetargetToIntermediate_result() {
    }

    public RetargetToIntermediate_result(
      MMIStandard.MAvatarPostureValues success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RetargetToIntermediate_result(RetargetToIntermediate_result other) {
      if (other.isSetSuccess()) {
        this.success = new MMIStandard.MAvatarPostureValues(other.success);
      }
    }

    public RetargetToIntermediate_result deepCopy() {
      return new RetargetToIntermediate_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPostureValues getSuccess() {
      return this.success;
    }

    public RetargetToIntermediate_result setSuccess(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((MMIStandard.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RetargetToIntermediate_result)
        return this.equals((RetargetToIntermediate_result)that);
      return false;
    }

    public boolean equals(RetargetToIntermediate_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RetargetToIntermediate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RetargetToIntermediate_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RetargetToIntermediate_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToIntermediate_resultStandardScheme getScheme() {
        return new RetargetToIntermediate_resultStandardScheme();
      }
    }

    private static class RetargetToIntermediate_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<RetargetToIntermediate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RetargetToIntermediate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new MMIStandard.MAvatarPostureValues();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RetargetToIntermediate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RetargetToIntermediate_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToIntermediate_resultTupleScheme getScheme() {
        return new RetargetToIntermediate_resultTupleScheme();
      }
    }

    private static class RetargetToIntermediate_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<RetargetToIntermediate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RetargetToIntermediate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RetargetToIntermediate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new MMIStandard.MAvatarPostureValues();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RetargetToSpecific_args implements org.apache.thrift.TBase<RetargetToSpecific_args, RetargetToSpecific_args._Fields>, java.io.Serializable, Cloneable, Comparable<RetargetToSpecific_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RetargetToSpecific_args");

    private static final org.apache.thrift.protocol.TField INTERMEDIATE_POSTURE_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediatePostureValues", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RetargetToSpecific_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RetargetToSpecific_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues intermediatePostureValues; // required
    public @org.apache.thrift.annotation.Nullable java.lang.String id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      INTERMEDIATE_POSTURE_VALUES((short)1, "intermediatePostureValues"),
      ID((short)2, "id");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // INTERMEDIATE_POSTURE_VALUES
            return INTERMEDIATE_POSTURE_VALUES;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.INTERMEDIATE_POSTURE_VALUES, new org.apache.thrift.meta_data.FieldMetaData("intermediatePostureValues", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPostureValues.class)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RetargetToSpecific_args.class, metaDataMap);
    }

    public RetargetToSpecific_args() {
    }

    public RetargetToSpecific_args(
      MMIStandard.MAvatarPostureValues intermediatePostureValues,
      java.lang.String id)
    {
      this();
      this.intermediatePostureValues = intermediatePostureValues;
      this.id = id;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RetargetToSpecific_args(RetargetToSpecific_args other) {
      if (other.isSetIntermediatePostureValues()) {
        this.intermediatePostureValues = new MMIStandard.MAvatarPostureValues(other.intermediatePostureValues);
      }
      if (other.isSetId()) {
        this.id = other.id;
      }
    }

    public RetargetToSpecific_args deepCopy() {
      return new RetargetToSpecific_args(this);
    }

    @Override
    public void clear() {
      this.intermediatePostureValues = null;
      this.id = null;
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPostureValues getIntermediatePostureValues() {
      return this.intermediatePostureValues;
    }

    public RetargetToSpecific_args setIntermediatePostureValues(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues intermediatePostureValues) {
      this.intermediatePostureValues = intermediatePostureValues;
      return this;
    }

    public void unsetIntermediatePostureValues() {
      this.intermediatePostureValues = null;
    }

    /** Returns true if field intermediatePostureValues is set (has been assigned a value) and false otherwise */
    public boolean isSetIntermediatePostureValues() {
      return this.intermediatePostureValues != null;
    }

    public void setIntermediatePostureValuesIsSet(boolean value) {
      if (!value) {
        this.intermediatePostureValues = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getId() {
      return this.id;
    }

    public RetargetToSpecific_args setId(@org.apache.thrift.annotation.Nullable java.lang.String id) {
      this.id = id;
      return this;
    }

    public void unsetId() {
      this.id = null;
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return this.id != null;
    }

    public void setIdIsSet(boolean value) {
      if (!value) {
        this.id = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case INTERMEDIATE_POSTURE_VALUES:
        if (value == null) {
          unsetIntermediatePostureValues();
        } else {
          setIntermediatePostureValues((MMIStandard.MAvatarPostureValues)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case INTERMEDIATE_POSTURE_VALUES:
        return getIntermediatePostureValues();

      case ID:
        return getId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case INTERMEDIATE_POSTURE_VALUES:
        return isSetIntermediatePostureValues();
      case ID:
        return isSetId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RetargetToSpecific_args)
        return this.equals((RetargetToSpecific_args)that);
      return false;
    }

    public boolean equals(RetargetToSpecific_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_intermediatePostureValues = true && this.isSetIntermediatePostureValues();
      boolean that_present_intermediatePostureValues = true && that.isSetIntermediatePostureValues();
      if (this_present_intermediatePostureValues || that_present_intermediatePostureValues) {
        if (!(this_present_intermediatePostureValues && that_present_intermediatePostureValues))
          return false;
        if (!this.intermediatePostureValues.equals(that.intermediatePostureValues))
          return false;
      }

      boolean this_present_id = true && this.isSetId();
      boolean that_present_id = true && that.isSetId();
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (!this.id.equals(that.id))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIntermediatePostureValues()) ? 131071 : 524287);
      if (isSetIntermediatePostureValues())
        hashCode = hashCode * 8191 + intermediatePostureValues.hashCode();

      hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
      if (isSetId())
        hashCode = hashCode * 8191 + id.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RetargetToSpecific_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIntermediatePostureValues()).compareTo(other.isSetIntermediatePostureValues());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIntermediatePostureValues()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediatePostureValues, other.intermediatePostureValues);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RetargetToSpecific_args(");
      boolean first = true;

      sb.append("intermediatePostureValues:");
      if (this.intermediatePostureValues == null) {
        sb.append("null");
      } else {
        sb.append(this.intermediatePostureValues);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      if (this.id == null) {
        sb.append("null");
      } else {
        sb.append(this.id);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (intermediatePostureValues != null) {
        intermediatePostureValues.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RetargetToSpecific_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToSpecific_argsStandardScheme getScheme() {
        return new RetargetToSpecific_argsStandardScheme();
      }
    }

    private static class RetargetToSpecific_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<RetargetToSpecific_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RetargetToSpecific_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // INTERMEDIATE_POSTURE_VALUES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.intermediatePostureValues = new MMIStandard.MAvatarPostureValues();
                struct.intermediatePostureValues.read(iprot);
                struct.setIntermediatePostureValuesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.id = iprot.readString();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RetargetToSpecific_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.intermediatePostureValues != null) {
          oprot.writeFieldBegin(INTERMEDIATE_POSTURE_VALUES_FIELD_DESC);
          struct.intermediatePostureValues.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.id != null) {
          oprot.writeFieldBegin(ID_FIELD_DESC);
          oprot.writeString(struct.id);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RetargetToSpecific_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToSpecific_argsTupleScheme getScheme() {
        return new RetargetToSpecific_argsTupleScheme();
      }
    }

    private static class RetargetToSpecific_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<RetargetToSpecific_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RetargetToSpecific_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIntermediatePostureValues()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetIntermediatePostureValues()) {
          struct.intermediatePostureValues.write(oprot);
        }
        if (struct.isSetId()) {
          oprot.writeString(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RetargetToSpecific_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.intermediatePostureValues = new MMIStandard.MAvatarPostureValues();
          struct.intermediatePostureValues.read(iprot);
          struct.setIntermediatePostureValuesIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readString();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RetargetToSpecific_result implements org.apache.thrift.TBase<RetargetToSpecific_result, RetargetToSpecific_result._Fields>, java.io.Serializable, Cloneable, Comparable<RetargetToSpecific_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RetargetToSpecific_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RetargetToSpecific_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RetargetToSpecific_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MMIStandard.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RetargetToSpecific_result.class, metaDataMap);
    }

    public RetargetToSpecific_result() {
    }

    public RetargetToSpecific_result(
      MMIStandard.MAvatarPostureValues success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RetargetToSpecific_result(RetargetToSpecific_result other) {
      if (other.isSetSuccess()) {
        this.success = new MMIStandard.MAvatarPostureValues(other.success);
      }
    }

    public RetargetToSpecific_result deepCopy() {
      return new RetargetToSpecific_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public MMIStandard.MAvatarPostureValues getSuccess() {
      return this.success;
    }

    public RetargetToSpecific_result setSuccess(@org.apache.thrift.annotation.Nullable MMIStandard.MAvatarPostureValues success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((MMIStandard.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RetargetToSpecific_result)
        return this.equals((RetargetToSpecific_result)that);
      return false;
    }

    public boolean equals(RetargetToSpecific_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RetargetToSpecific_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RetargetToSpecific_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RetargetToSpecific_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToSpecific_resultStandardScheme getScheme() {
        return new RetargetToSpecific_resultStandardScheme();
      }
    }

    private static class RetargetToSpecific_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<RetargetToSpecific_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RetargetToSpecific_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new MMIStandard.MAvatarPostureValues();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RetargetToSpecific_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RetargetToSpecific_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RetargetToSpecific_resultTupleScheme getScheme() {
        return new RetargetToSpecific_resultTupleScheme();
      }
    }

    private static class RetargetToSpecific_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<RetargetToSpecific_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RetargetToSpecific_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RetargetToSpecific_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new MMIStandard.MAvatarPostureValues();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
