/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package MMIStandard;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-10-02")
public class MConstraint implements org.apache.thrift.TBase<MConstraint, MConstraint._Fields>, java.io.Serializable, Cloneable, Comparable<MConstraint> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MConstraint");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ID", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField POSITION_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("PositionConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField ROTATION_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("RotationConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField ENDEFFECTOR_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("EndeffectorConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField TRAJECTORY_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("TrajectoryConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField PARENTING_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("ParentingConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField POSTURE_CONSTRAINT_FIELD_DESC = new org.apache.thrift.protocol.TField("PostureConstraint", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("Properties", org.apache.thrift.protocol.TType.MAP, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new MConstraintStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new MConstraintTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String ID; // required
  public @org.apache.thrift.annotation.Nullable MPositionConstraint PositionConstraint; // optional
  public @org.apache.thrift.annotation.Nullable MRotationConstraint RotationConstraint; // optional
  public @org.apache.thrift.annotation.Nullable MEndeffectorConstraint EndeffectorConstraint; // optional
  public @org.apache.thrift.annotation.Nullable MTrajectoryConstraint TrajectoryConstraint; // optional
  public @org.apache.thrift.annotation.Nullable MParentingConstraint ParentingConstraint; // optional
  public @org.apache.thrift.annotation.Nullable MPostureConstraint PostureConstraint; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> Properties; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "ID"),
    POSITION_CONSTRAINT((short)2, "PositionConstraint"),
    ROTATION_CONSTRAINT((short)3, "RotationConstraint"),
    ENDEFFECTOR_CONSTRAINT((short)4, "EndeffectorConstraint"),
    TRAJECTORY_CONSTRAINT((short)5, "TrajectoryConstraint"),
    PARENTING_CONSTRAINT((short)6, "ParentingConstraint"),
    POSTURE_CONSTRAINT((short)7, "PostureConstraint"),
    PROPERTIES((short)8, "Properties");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // POSITION_CONSTRAINT
          return POSITION_CONSTRAINT;
        case 3: // ROTATION_CONSTRAINT
          return ROTATION_CONSTRAINT;
        case 4: // ENDEFFECTOR_CONSTRAINT
          return ENDEFFECTOR_CONSTRAINT;
        case 5: // TRAJECTORY_CONSTRAINT
          return TRAJECTORY_CONSTRAINT;
        case 6: // PARENTING_CONSTRAINT
          return PARENTING_CONSTRAINT;
        case 7: // POSTURE_CONSTRAINT
          return POSTURE_CONSTRAINT;
        case 8: // PROPERTIES
          return PROPERTIES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.POSITION_CONSTRAINT,_Fields.ROTATION_CONSTRAINT,_Fields.ENDEFFECTOR_CONSTRAINT,_Fields.TRAJECTORY_CONSTRAINT,_Fields.PARENTING_CONSTRAINT,_Fields.POSTURE_CONSTRAINT,_Fields.PROPERTIES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("ID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("PositionConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MPositionConstraint.class)));
    tmpMap.put(_Fields.ROTATION_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("RotationConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MRotationConstraint.class)));
    tmpMap.put(_Fields.ENDEFFECTOR_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("EndeffectorConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MEndeffectorConstraint.class)));
    tmpMap.put(_Fields.TRAJECTORY_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("TrajectoryConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MTrajectoryConstraint.class)));
    tmpMap.put(_Fields.PARENTING_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("ParentingConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MParentingConstraint.class)));
    tmpMap.put(_Fields.POSTURE_CONSTRAINT, new org.apache.thrift.meta_data.FieldMetaData("PostureConstraint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MPostureConstraint.class)));
    tmpMap.put(_Fields.PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("Properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MConstraint.class, metaDataMap);
  }

  public MConstraint() {
  }

  public MConstraint(
    java.lang.String ID)
  {
    this();
    this.ID = ID;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MConstraint(MConstraint other) {
    if (other.isSetID()) {
      this.ID = other.ID;
    }
    if (other.isSetPositionConstraint()) {
      this.PositionConstraint = new MPositionConstraint(other.PositionConstraint);
    }
    if (other.isSetRotationConstraint()) {
      this.RotationConstraint = new MRotationConstraint(other.RotationConstraint);
    }
    if (other.isSetEndeffectorConstraint()) {
      this.EndeffectorConstraint = new MEndeffectorConstraint(other.EndeffectorConstraint);
    }
    if (other.isSetTrajectoryConstraint()) {
      this.TrajectoryConstraint = new MTrajectoryConstraint(other.TrajectoryConstraint);
    }
    if (other.isSetParentingConstraint()) {
      this.ParentingConstraint = new MParentingConstraint(other.ParentingConstraint);
    }
    if (other.isSetPostureConstraint()) {
      this.PostureConstraint = new MPostureConstraint(other.PostureConstraint);
    }
    if (other.isSetProperties()) {
      java.util.Map<java.lang.String,java.lang.String> __this__Properties = new java.util.HashMap<java.lang.String,java.lang.String>(other.Properties);
      this.Properties = __this__Properties;
    }
  }

  public MConstraint deepCopy() {
    return new MConstraint(this);
  }

  @Override
  public void clear() {
    this.ID = null;
    this.PositionConstraint = null;
    this.RotationConstraint = null;
    this.EndeffectorConstraint = null;
    this.TrajectoryConstraint = null;
    this.ParentingConstraint = null;
    this.PostureConstraint = null;
    this.Properties = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getID() {
    return this.ID;
  }

  public MConstraint setID(@org.apache.thrift.annotation.Nullable java.lang.String ID) {
    this.ID = ID;
    return this;
  }

  public void unsetID() {
    this.ID = null;
  }

  /** Returns true if field ID is set (has been assigned a value) and false otherwise */
  public boolean isSetID() {
    return this.ID != null;
  }

  public void setIDIsSet(boolean value) {
    if (!value) {
      this.ID = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MPositionConstraint getPositionConstraint() {
    return this.PositionConstraint;
  }

  public MConstraint setPositionConstraint(@org.apache.thrift.annotation.Nullable MPositionConstraint PositionConstraint) {
    this.PositionConstraint = PositionConstraint;
    return this;
  }

  public void unsetPositionConstraint() {
    this.PositionConstraint = null;
  }

  /** Returns true if field PositionConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionConstraint() {
    return this.PositionConstraint != null;
  }

  public void setPositionConstraintIsSet(boolean value) {
    if (!value) {
      this.PositionConstraint = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MRotationConstraint getRotationConstraint() {
    return this.RotationConstraint;
  }

  public MConstraint setRotationConstraint(@org.apache.thrift.annotation.Nullable MRotationConstraint RotationConstraint) {
    this.RotationConstraint = RotationConstraint;
    return this;
  }

  public void unsetRotationConstraint() {
    this.RotationConstraint = null;
  }

  /** Returns true if field RotationConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetRotationConstraint() {
    return this.RotationConstraint != null;
  }

  public void setRotationConstraintIsSet(boolean value) {
    if (!value) {
      this.RotationConstraint = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MEndeffectorConstraint getEndeffectorConstraint() {
    return this.EndeffectorConstraint;
  }

  public MConstraint setEndeffectorConstraint(@org.apache.thrift.annotation.Nullable MEndeffectorConstraint EndeffectorConstraint) {
    this.EndeffectorConstraint = EndeffectorConstraint;
    return this;
  }

  public void unsetEndeffectorConstraint() {
    this.EndeffectorConstraint = null;
  }

  /** Returns true if field EndeffectorConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetEndeffectorConstraint() {
    return this.EndeffectorConstraint != null;
  }

  public void setEndeffectorConstraintIsSet(boolean value) {
    if (!value) {
      this.EndeffectorConstraint = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MTrajectoryConstraint getTrajectoryConstraint() {
    return this.TrajectoryConstraint;
  }

  public MConstraint setTrajectoryConstraint(@org.apache.thrift.annotation.Nullable MTrajectoryConstraint TrajectoryConstraint) {
    this.TrajectoryConstraint = TrajectoryConstraint;
    return this;
  }

  public void unsetTrajectoryConstraint() {
    this.TrajectoryConstraint = null;
  }

  /** Returns true if field TrajectoryConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetTrajectoryConstraint() {
    return this.TrajectoryConstraint != null;
  }

  public void setTrajectoryConstraintIsSet(boolean value) {
    if (!value) {
      this.TrajectoryConstraint = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MParentingConstraint getParentingConstraint() {
    return this.ParentingConstraint;
  }

  public MConstraint setParentingConstraint(@org.apache.thrift.annotation.Nullable MParentingConstraint ParentingConstraint) {
    this.ParentingConstraint = ParentingConstraint;
    return this;
  }

  public void unsetParentingConstraint() {
    this.ParentingConstraint = null;
  }

  /** Returns true if field ParentingConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetParentingConstraint() {
    return this.ParentingConstraint != null;
  }

  public void setParentingConstraintIsSet(boolean value) {
    if (!value) {
      this.ParentingConstraint = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public MPostureConstraint getPostureConstraint() {
    return this.PostureConstraint;
  }

  public MConstraint setPostureConstraint(@org.apache.thrift.annotation.Nullable MPostureConstraint PostureConstraint) {
    this.PostureConstraint = PostureConstraint;
    return this;
  }

  public void unsetPostureConstraint() {
    this.PostureConstraint = null;
  }

  /** Returns true if field PostureConstraint is set (has been assigned a value) and false otherwise */
  public boolean isSetPostureConstraint() {
    return this.PostureConstraint != null;
  }

  public void setPostureConstraintIsSet(boolean value) {
    if (!value) {
      this.PostureConstraint = null;
    }
  }

  public int getPropertiesSize() {
    return (this.Properties == null) ? 0 : this.Properties.size();
  }

  public void putToProperties(java.lang.String key, java.lang.String val) {
    if (this.Properties == null) {
      this.Properties = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.Properties.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getProperties() {
    return this.Properties;
  }

  public MConstraint setProperties(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> Properties) {
    this.Properties = Properties;
    return this;
  }

  public void unsetProperties() {
    this.Properties = null;
  }

  /** Returns true if field Properties is set (has been assigned a value) and false otherwise */
  public boolean isSetProperties() {
    return this.Properties != null;
  }

  public void setPropertiesIsSet(boolean value) {
    if (!value) {
      this.Properties = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetID();
      } else {
        setID((java.lang.String)value);
      }
      break;

    case POSITION_CONSTRAINT:
      if (value == null) {
        unsetPositionConstraint();
      } else {
        setPositionConstraint((MPositionConstraint)value);
      }
      break;

    case ROTATION_CONSTRAINT:
      if (value == null) {
        unsetRotationConstraint();
      } else {
        setRotationConstraint((MRotationConstraint)value);
      }
      break;

    case ENDEFFECTOR_CONSTRAINT:
      if (value == null) {
        unsetEndeffectorConstraint();
      } else {
        setEndeffectorConstraint((MEndeffectorConstraint)value);
      }
      break;

    case TRAJECTORY_CONSTRAINT:
      if (value == null) {
        unsetTrajectoryConstraint();
      } else {
        setTrajectoryConstraint((MTrajectoryConstraint)value);
      }
      break;

    case PARENTING_CONSTRAINT:
      if (value == null) {
        unsetParentingConstraint();
      } else {
        setParentingConstraint((MParentingConstraint)value);
      }
      break;

    case POSTURE_CONSTRAINT:
      if (value == null) {
        unsetPostureConstraint();
      } else {
        setPostureConstraint((MPostureConstraint)value);
      }
      break;

    case PROPERTIES:
      if (value == null) {
        unsetProperties();
      } else {
        setProperties((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getID();

    case POSITION_CONSTRAINT:
      return getPositionConstraint();

    case ROTATION_CONSTRAINT:
      return getRotationConstraint();

    case ENDEFFECTOR_CONSTRAINT:
      return getEndeffectorConstraint();

    case TRAJECTORY_CONSTRAINT:
      return getTrajectoryConstraint();

    case PARENTING_CONSTRAINT:
      return getParentingConstraint();

    case POSTURE_CONSTRAINT:
      return getPostureConstraint();

    case PROPERTIES:
      return getProperties();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetID();
    case POSITION_CONSTRAINT:
      return isSetPositionConstraint();
    case ROTATION_CONSTRAINT:
      return isSetRotationConstraint();
    case ENDEFFECTOR_CONSTRAINT:
      return isSetEndeffectorConstraint();
    case TRAJECTORY_CONSTRAINT:
      return isSetTrajectoryConstraint();
    case PARENTING_CONSTRAINT:
      return isSetParentingConstraint();
    case POSTURE_CONSTRAINT:
      return isSetPostureConstraint();
    case PROPERTIES:
      return isSetProperties();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof MConstraint)
      return this.equals((MConstraint)that);
    return false;
  }

  public boolean equals(MConstraint that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_ID = true && this.isSetID();
    boolean that_present_ID = true && that.isSetID();
    if (this_present_ID || that_present_ID) {
      if (!(this_present_ID && that_present_ID))
        return false;
      if (!this.ID.equals(that.ID))
        return false;
    }

    boolean this_present_PositionConstraint = true && this.isSetPositionConstraint();
    boolean that_present_PositionConstraint = true && that.isSetPositionConstraint();
    if (this_present_PositionConstraint || that_present_PositionConstraint) {
      if (!(this_present_PositionConstraint && that_present_PositionConstraint))
        return false;
      if (!this.PositionConstraint.equals(that.PositionConstraint))
        return false;
    }

    boolean this_present_RotationConstraint = true && this.isSetRotationConstraint();
    boolean that_present_RotationConstraint = true && that.isSetRotationConstraint();
    if (this_present_RotationConstraint || that_present_RotationConstraint) {
      if (!(this_present_RotationConstraint && that_present_RotationConstraint))
        return false;
      if (!this.RotationConstraint.equals(that.RotationConstraint))
        return false;
    }

    boolean this_present_EndeffectorConstraint = true && this.isSetEndeffectorConstraint();
    boolean that_present_EndeffectorConstraint = true && that.isSetEndeffectorConstraint();
    if (this_present_EndeffectorConstraint || that_present_EndeffectorConstraint) {
      if (!(this_present_EndeffectorConstraint && that_present_EndeffectorConstraint))
        return false;
      if (!this.EndeffectorConstraint.equals(that.EndeffectorConstraint))
        return false;
    }

    boolean this_present_TrajectoryConstraint = true && this.isSetTrajectoryConstraint();
    boolean that_present_TrajectoryConstraint = true && that.isSetTrajectoryConstraint();
    if (this_present_TrajectoryConstraint || that_present_TrajectoryConstraint) {
      if (!(this_present_TrajectoryConstraint && that_present_TrajectoryConstraint))
        return false;
      if (!this.TrajectoryConstraint.equals(that.TrajectoryConstraint))
        return false;
    }

    boolean this_present_ParentingConstraint = true && this.isSetParentingConstraint();
    boolean that_present_ParentingConstraint = true && that.isSetParentingConstraint();
    if (this_present_ParentingConstraint || that_present_ParentingConstraint) {
      if (!(this_present_ParentingConstraint && that_present_ParentingConstraint))
        return false;
      if (!this.ParentingConstraint.equals(that.ParentingConstraint))
        return false;
    }

    boolean this_present_PostureConstraint = true && this.isSetPostureConstraint();
    boolean that_present_PostureConstraint = true && that.isSetPostureConstraint();
    if (this_present_PostureConstraint || that_present_PostureConstraint) {
      if (!(this_present_PostureConstraint && that_present_PostureConstraint))
        return false;
      if (!this.PostureConstraint.equals(that.PostureConstraint))
        return false;
    }

    boolean this_present_Properties = true && this.isSetProperties();
    boolean that_present_Properties = true && that.isSetProperties();
    if (this_present_Properties || that_present_Properties) {
      if (!(this_present_Properties && that_present_Properties))
        return false;
      if (!this.Properties.equals(that.Properties))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetID()) ? 131071 : 524287);
    if (isSetID())
      hashCode = hashCode * 8191 + ID.hashCode();

    hashCode = hashCode * 8191 + ((isSetPositionConstraint()) ? 131071 : 524287);
    if (isSetPositionConstraint())
      hashCode = hashCode * 8191 + PositionConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetRotationConstraint()) ? 131071 : 524287);
    if (isSetRotationConstraint())
      hashCode = hashCode * 8191 + RotationConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetEndeffectorConstraint()) ? 131071 : 524287);
    if (isSetEndeffectorConstraint())
      hashCode = hashCode * 8191 + EndeffectorConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetTrajectoryConstraint()) ? 131071 : 524287);
    if (isSetTrajectoryConstraint())
      hashCode = hashCode * 8191 + TrajectoryConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetParentingConstraint()) ? 131071 : 524287);
    if (isSetParentingConstraint())
      hashCode = hashCode * 8191 + ParentingConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetPostureConstraint()) ? 131071 : 524287);
    if (isSetPostureConstraint())
      hashCode = hashCode * 8191 + PostureConstraint.hashCode();

    hashCode = hashCode * 8191 + ((isSetProperties()) ? 131071 : 524287);
    if (isSetProperties())
      hashCode = hashCode * 8191 + Properties.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(MConstraint other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetID()).compareTo(other.isSetID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ID, other.ID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionConstraint()).compareTo(other.isSetPositionConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PositionConstraint, other.PositionConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRotationConstraint()).compareTo(other.isSetRotationConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRotationConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.RotationConstraint, other.RotationConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndeffectorConstraint()).compareTo(other.isSetEndeffectorConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndeffectorConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.EndeffectorConstraint, other.EndeffectorConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrajectoryConstraint()).compareTo(other.isSetTrajectoryConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrajectoryConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TrajectoryConstraint, other.TrajectoryConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetParentingConstraint()).compareTo(other.isSetParentingConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentingConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ParentingConstraint, other.ParentingConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPostureConstraint()).compareTo(other.isSetPostureConstraint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostureConstraint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PostureConstraint, other.PostureConstraint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProperties()).compareTo(other.isSetProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Properties, other.Properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("MConstraint(");
    boolean first = true;

    sb.append("ID:");
    if (this.ID == null) {
      sb.append("null");
    } else {
      sb.append(this.ID);
    }
    first = false;
    if (isSetPositionConstraint()) {
      if (!first) sb.append(", ");
      sb.append("PositionConstraint:");
      if (this.PositionConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.PositionConstraint);
      }
      first = false;
    }
    if (isSetRotationConstraint()) {
      if (!first) sb.append(", ");
      sb.append("RotationConstraint:");
      if (this.RotationConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.RotationConstraint);
      }
      first = false;
    }
    if (isSetEndeffectorConstraint()) {
      if (!first) sb.append(", ");
      sb.append("EndeffectorConstraint:");
      if (this.EndeffectorConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.EndeffectorConstraint);
      }
      first = false;
    }
    if (isSetTrajectoryConstraint()) {
      if (!first) sb.append(", ");
      sb.append("TrajectoryConstraint:");
      if (this.TrajectoryConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.TrajectoryConstraint);
      }
      first = false;
    }
    if (isSetParentingConstraint()) {
      if (!first) sb.append(", ");
      sb.append("ParentingConstraint:");
      if (this.ParentingConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.ParentingConstraint);
      }
      first = false;
    }
    if (isSetPostureConstraint()) {
      if (!first) sb.append(", ");
      sb.append("PostureConstraint:");
      if (this.PostureConstraint == null) {
        sb.append("null");
      } else {
        sb.append(this.PostureConstraint);
      }
      first = false;
    }
    if (isSetProperties()) {
      if (!first) sb.append(", ");
      sb.append("Properties:");
      if (this.Properties == null) {
        sb.append("null");
      } else {
        sb.append(this.Properties);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (ID == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ID' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (PositionConstraint != null) {
      PositionConstraint.validate();
    }
    if (RotationConstraint != null) {
      RotationConstraint.validate();
    }
    if (EndeffectorConstraint != null) {
      EndeffectorConstraint.validate();
    }
    if (TrajectoryConstraint != null) {
      TrajectoryConstraint.validate();
    }
    if (ParentingConstraint != null) {
      ParentingConstraint.validate();
    }
    if (PostureConstraint != null) {
      PostureConstraint.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MConstraintStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MConstraintStandardScheme getScheme() {
      return new MConstraintStandardScheme();
    }
  }

  private static class MConstraintStandardScheme extends org.apache.thrift.scheme.StandardScheme<MConstraint> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MConstraint struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ID = iprot.readString();
              struct.setIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POSITION_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PositionConstraint = new MPositionConstraint();
              struct.PositionConstraint.read(iprot);
              struct.setPositionConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ROTATION_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.RotationConstraint = new MRotationConstraint();
              struct.RotationConstraint.read(iprot);
              struct.setRotationConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ENDEFFECTOR_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.EndeffectorConstraint = new MEndeffectorConstraint();
              struct.EndeffectorConstraint.read(iprot);
              struct.setEndeffectorConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TRAJECTORY_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.TrajectoryConstraint = new MTrajectoryConstraint();
              struct.TrajectoryConstraint.read(iprot);
              struct.setTrajectoryConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PARENTING_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.ParentingConstraint = new MParentingConstraint();
              struct.ParentingConstraint.read(iprot);
              struct.setParentingConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // POSTURE_CONSTRAINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PostureConstraint = new MPostureConstraint();
              struct.PostureConstraint.read(iprot);
              struct.setPostureConstraintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map166 = iprot.readMapBegin();
                struct.Properties = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map166.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key167;
                @org.apache.thrift.annotation.Nullable java.lang.String _val168;
                for (int _i169 = 0; _i169 < _map166.size; ++_i169)
                {
                  _key167 = iprot.readString();
                  _val168 = iprot.readString();
                  struct.Properties.put(_key167, _val168);
                }
                iprot.readMapEnd();
              }
              struct.setPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MConstraint struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.ID != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.ID);
        oprot.writeFieldEnd();
      }
      if (struct.PositionConstraint != null) {
        if (struct.isSetPositionConstraint()) {
          oprot.writeFieldBegin(POSITION_CONSTRAINT_FIELD_DESC);
          struct.PositionConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.RotationConstraint != null) {
        if (struct.isSetRotationConstraint()) {
          oprot.writeFieldBegin(ROTATION_CONSTRAINT_FIELD_DESC);
          struct.RotationConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.EndeffectorConstraint != null) {
        if (struct.isSetEndeffectorConstraint()) {
          oprot.writeFieldBegin(ENDEFFECTOR_CONSTRAINT_FIELD_DESC);
          struct.EndeffectorConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.TrajectoryConstraint != null) {
        if (struct.isSetTrajectoryConstraint()) {
          oprot.writeFieldBegin(TRAJECTORY_CONSTRAINT_FIELD_DESC);
          struct.TrajectoryConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ParentingConstraint != null) {
        if (struct.isSetParentingConstraint()) {
          oprot.writeFieldBegin(PARENTING_CONSTRAINT_FIELD_DESC);
          struct.ParentingConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PostureConstraint != null) {
        if (struct.isSetPostureConstraint()) {
          oprot.writeFieldBegin(POSTURE_CONSTRAINT_FIELD_DESC);
          struct.PostureConstraint.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.Properties != null) {
        if (struct.isSetProperties()) {
          oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.Properties.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter170 : struct.Properties.entrySet())
            {
              oprot.writeString(_iter170.getKey());
              oprot.writeString(_iter170.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MConstraintTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MConstraintTupleScheme getScheme() {
      return new MConstraintTupleScheme();
    }
  }

  private static class MConstraintTupleScheme extends org.apache.thrift.scheme.TupleScheme<MConstraint> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MConstraint struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.ID);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPositionConstraint()) {
        optionals.set(0);
      }
      if (struct.isSetRotationConstraint()) {
        optionals.set(1);
      }
      if (struct.isSetEndeffectorConstraint()) {
        optionals.set(2);
      }
      if (struct.isSetTrajectoryConstraint()) {
        optionals.set(3);
      }
      if (struct.isSetParentingConstraint()) {
        optionals.set(4);
      }
      if (struct.isSetPostureConstraint()) {
        optionals.set(5);
      }
      if (struct.isSetProperties()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetPositionConstraint()) {
        struct.PositionConstraint.write(oprot);
      }
      if (struct.isSetRotationConstraint()) {
        struct.RotationConstraint.write(oprot);
      }
      if (struct.isSetEndeffectorConstraint()) {
        struct.EndeffectorConstraint.write(oprot);
      }
      if (struct.isSetTrajectoryConstraint()) {
        struct.TrajectoryConstraint.write(oprot);
      }
      if (struct.isSetParentingConstraint()) {
        struct.ParentingConstraint.write(oprot);
      }
      if (struct.isSetPostureConstraint()) {
        struct.PostureConstraint.write(oprot);
      }
      if (struct.isSetProperties()) {
        {
          oprot.writeI32(struct.Properties.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter171 : struct.Properties.entrySet())
          {
            oprot.writeString(_iter171.getKey());
            oprot.writeString(_iter171.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MConstraint struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.ID = iprot.readString();
      struct.setIDIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.PositionConstraint = new MPositionConstraint();
        struct.PositionConstraint.read(iprot);
        struct.setPositionConstraintIsSet(true);
      }
      if (incoming.get(1)) {
        struct.RotationConstraint = new MRotationConstraint();
        struct.RotationConstraint.read(iprot);
        struct.setRotationConstraintIsSet(true);
      }
      if (incoming.get(2)) {
        struct.EndeffectorConstraint = new MEndeffectorConstraint();
        struct.EndeffectorConstraint.read(iprot);
        struct.setEndeffectorConstraintIsSet(true);
      }
      if (incoming.get(3)) {
        struct.TrajectoryConstraint = new MTrajectoryConstraint();
        struct.TrajectoryConstraint.read(iprot);
        struct.setTrajectoryConstraintIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ParentingConstraint = new MParentingConstraint();
        struct.ParentingConstraint.read(iprot);
        struct.setParentingConstraintIsSet(true);
      }
      if (incoming.get(5)) {
        struct.PostureConstraint = new MPostureConstraint();
        struct.PostureConstraint.read(iprot);
        struct.setPostureConstraintIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TMap _map172 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.Properties = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map172.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key173;
          @org.apache.thrift.annotation.Nullable java.lang.String _val174;
          for (int _i175 = 0; _i175 < _map172.size; ++_i175)
          {
            _key173 = iprot.readString();
            _val174 = iprot.readString();
            struct.Properties.put(_key173, _val174);
          }
        }
        struct.setPropertiesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

