<?php
/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

interface MSceneAccessIf extends \MMIServiceBaseIf
{
    /**
     * @return \MSceneObject[]
     */
    public function GetSceneObjects();
    /**
     * @param string $id
     * @return \MSceneObject
     */
    public function GetSceneObjectByID($id);
    /**
     * @param string $name
     * @return \MSceneObject
     */
    public function GetSceneObjectByName($name);
    /**
     * @param \MVector3 $position
     * @param double $range
     * @return \MSceneObject[]
     */
    public function GetSceneObjectsInRange(\MVector3 $position, $range);
    /**
     * @return \MCollider[]
     */
    public function GetColliders();
    /**
     * @param string $id
     * @return \MCollider
     */
    public function GetColliderById($id);
    /**
     * @param \MVector3 $position
     * @param double $range
     * @return \MCollider[]
     */
    public function GetCollidersInRange(\MVector3 $position, $range);
    /**
     * @return \MMesh[]
     */
    public function GetMeshes();
    /**
     * @param string $id
     * @return \MMesh
     */
    public function GetMeshByID($id);
    /**
     * @return \MTransform[]
     */
    public function GetTransforms();
    /**
     * @param string $id
     * @return \MTransform
     */
    public function GetTransformByID($id);
    /**
     * @return \MAvatar[]
     */
    public function GetAvatars();
    /**
     * @param string $id
     * @return \MAvatar
     */
    public function GetAvatarByID($id);
    /**
     * @param string $name
     * @return \MAvatar
     */
    public function GetAvatarByName($name);
    /**
     * @param \MVector3 $position
     * @param double $distance
     * @return \MAvatar[]
     */
    public function GetAvatarsInRange(\MVector3 $position, $distance);
    /**
     * @return double
     */
    public function GetSimulationTime();
    /**
     * @return \MSceneUpdate
     */
    public function GetSceneChanges();
    /**
     * @return \MSceneUpdate
     */
    public function GetFullScene();
    /**
     * @return \MNavigationMesh
     */
    public function GetNavigationMesh();
    /**
     * @param string $fileFormat
     * @param string $selection
     * @return string
     */
    public function GetData($fileFormat, $selection);
    /**
     * @return \MAttachment[]
     */
    public function GetAttachments();
    /**
     * @param string $id
     * @return \MAttachment[]
     */
    public function GetAttachmentsByID($id);
    /**
     * @param string $name
     * @return \MAttachment[]
     */
    public function GetAttachmentsByName($name);
    /**
     * @param string $id
     * @return \MAttachment[]
     */
    public function GetAttachmentsChildrenRecursive($id);
    /**
     * @param string $id
     * @return \MAttachment[]
     */
    public function GetAttachmentsParentsRecursive($id);
}
