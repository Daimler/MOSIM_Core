<?php
/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

interface MCoSimulationAccessIf extends \MMIServiceBaseIf
{
    /**
     * @param \MIPAddress $clientAddress
     * @param string $eventType
     * @return \MBoolResponse
     */
    public function RegisterAtEvent(\MIPAddress $clientAddress, $eventType);
    /**
     * @param \MIPAddress $clientAddress
     * @param string $eventType
     * @return \MBoolResponse
     */
    public function UnregisterAtEvent(\MIPAddress $clientAddress, $eventType);
    /**
     * @param \MInstruction $instruction
     * @param array $properties
     * @return \MBoolResponse
     */
    public function AssignInstruction(\MInstruction $instruction, array $properties);
    /**
     * @return \MBoolResponse
     */
    public function Abort();
    /**
     * @param string $instructionID
     * @return \MBoolResponse
     */
    public function AbortInstruction($instructionID);
    /**
     * @param string[] $instructionIDs
     * @return \MBoolResponse
     */
    public function AbortInstructions(array $instructionIDs);
    /**
     * @param double $startTime
     * @param double $endTime
     * @param string $eventType
     * @return \MCoSimulationEvents[]
     */
    public function GetHistoryFromTime($startTime, $endTime, $eventType);
    /**
     * @param int $fromFrame
     * @param int $toFrame
     * @param string $eventType
     * @return \MCoSimulationEvents[]
     */
    public function GetHistoryFromFrames($fromFrame, $toFrame, $eventType);
    /**
     * @param string $eventType
     * @return \MCoSimulationEvents[]
     */
    public function GetHistory($eventType);
    /**
     * @return \MCoSimulationEvents
     */
    public function GetCurrentEvents();
}
